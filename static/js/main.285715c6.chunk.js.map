{"version":3,"sources":["contexts/CurrentUserContext.js","images/logo.svg","components/Header.js","components/Card.js","images/edit-button_big.svg","components/Main.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/Footer.js","utils/api.js","utils/utils.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["CurrentUserContext","React","createContext","Header","className","src","logo","alt","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onClick","link","name","type","aria-label","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","id","avatar","avatarEditIcon","about","map","PopupWithForm","title","buttonText","children","isOpen","onClose","onSubmit","checkOpen","noValidate","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","value","onChange","target","placeholder","required","EditAvatarPopup","onUpdateAvatar","inputRef","useRef","current","ref","AddPlacePopup","newCardName","setNewCardName","newCardUrl","setNewCardUrl","minLength","maxLength","Footer","Date","getFullYear","api","cardsUrl","userUrl","headers","this","_cardsUrl","_userUrl","_headers","_authorization","authorization","fetch","then","_checkResponse","method","body","JSON","stringify","newAvatarUrl","cardId","res","ok","json","Promise","reject","status","ImagePopup","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","getUserInfo","catch","err","console","log","getCardList","handleEscClose","evt","key","document","addEventListener","removeEventListener","Provider","changeLikeCardStatus","newCard","deleteCard","filter","setUserAvatar","setUserInfo","postNewCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.285715c6.chunk.js","sourcesContent":["import React from 'react';\nexport const CurrentUserContext = React.createContext();\n","export default __webpack_public_path__ + \"static/media/logo.03b78ada.svg\";","import React from 'react';\nimport logo from '../images/logo.svg';\n\nfunction Header() {\n  return (\n    <header className=\"header page__section\">\n    <img src={logo} alt=\"Логотип\" className=\"header__logo\"/>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\n\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = card.owner._id === currentUser._id;\n\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = (`card__trash-button ${isOwn ? 'card__trash-button_active' : ''}`);\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = (`card__like-button ${isLiked ? 'card__like-button_active' : ''}`);;\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleLikeClick() {\n    onCardLike(card);\n  }\n\n  function handleDeleteClick() {\n    onCardDelete(card);\n  }\n\n\n  return (\n    <div>\n      <figure className=\"card\">\n        <button className=\"card__image-button\" onClick={handleClick}>\n          <img src={card.link} alt={card.name} className=\"card__image\"/>\n        </button>\n        <figcaption className=\"card__caption\">\n          <p className=\"card__title\">{card.name}</p>\n          <div className=\"card__like-block\">\n            <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick} aria-label=\"Нравится\"></button>\n            <p className=\"card__likes-counter\">{card.likes.length}</p>\n          </div>\n        </figcaption>\n        <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick} aria-label=\"Удалить\"></button>\n      </figure>\n    </div>\n  )\n}\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/edit-button_big.a086f758.svg\";","import React from 'react';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\nimport Card from './Card';\nimport avatarEditIcon from '../images/edit-button_big.svg';\n\nfunction Main({onEditAvatar, onEditProfile, onAddPlace, cards, onCardClick, onCardLike, onCardDelete}) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <main id=\"content\">\n        <section className=\"profile page__section\" aria-label=\"Профиль\">\n          <div className=\"profile__content\">\n            <img src={currentUser.avatar} alt=\"Аватар профиля\" className=\"profile__avatar\"/>\n            <button type=\"button\"  className=\"profile__avatar-edit-button\" onClick={onEditAvatar}>\n              <img src={avatarEditIcon} alt=\"\" className=\"profile__avatar-edit-icon\"/>\n            </button>\n            <div className=\"profile__title\">\n              <h1 id=\"no_id\" className=\"profile__name\">{currentUser.name}</h1>\n              <button type=\"button\" className=\"profile__edit-button\" aria-label=\"Редактировать\" onClick={onEditProfile}></button>\n            </div>\n            <p className=\"profile__description\">{currentUser.about}</p>\n          </div>\n          <button type=\"button\" className=\"profile__add-button\" aria-label=\"Добавить\" onClick={onAddPlace}></button>\n        </section>\n\n        <section className=\"cards page__section\" aria-label=\"Места\">\n\n          {cards.map((card) => (\n            <Card\n              key={card._id}\n              card={card}\n              onCardClick={onCardClick}\n              onCardLike={onCardLike}\n              onCardDelete={onCardDelete}\n            />\n            )\n          )}\n\n        </section>\n      </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction PopupWithForm({name, title, buttonText, children, isOpen, onClose, onSubmit}) {\n  const checkOpen = isOpen ? \"popup_opened\" : \"\";\n\n  return (\n    <section className={`popup popup_type_${name} ${checkOpen}`}>\n      <form className=\"form\" name={name} onSubmit={onSubmit} noValidate>\n        <button type=\"button\" className=\"popup__close-button\" aria-label=\"Закрыть попап\" onClick={onClose}></button>\n        <h2 className=\"form__title\">{title}</h2>\n        {children}\n        <button type=\"submit\" className=\"form__submit-button\">{buttonText}</button>\n      </form>\n    </section>\n  )\n}\n\nexport default PopupWithForm;\n\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}) {\n\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  const currentUser = React.useContext(CurrentUserContext);\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  return(\n    <PopupWithForm\n    name=\"profile-edit\"\n    title=\"Редактировать профиль\"\n    buttonText=\"Сохранить\"\n    isOpen={isOpen}\n    onClose={onClose}\n    onSubmit={handleSubmit}\n    >\n      <label className=\"form__field\">\n        <input\n          type=\"text\"\n          value={name || ''}\n          onChange={handleNameChange}\n          className=\"form__input\"\n          placeholder=\"Имя\"\n          required\n        />\n        <span className=\"form__input-error username-input-error\"></span>\n      </label>\n      <label className=\"form__field\">\n        <input\n          type=\"text\"\n          value={description || ''}\n          onChange={handleDescriptionChange}\n          className=\"form__input\"\n          placeholder=\"О себе\"\n          required\n        />\n        <span className=\"form__input-error description-input-error\"></span>\n      </label>\n  </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar}) {\n\n  const inputRef = React.useRef(null);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateAvatar(inputRef.current.value);\n  }\n\n  return(\n    <PopupWithForm\n      name=\"avatar-edit\"\n      title=\"Обновить аватар\"\n      buttonText=\"Сохранить\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <label className=\"form__field\">\n      <input\n        type=\"url\"\n        ref={inputRef}\n        id=\"avatar-input\"\n        className=\"form__input form__input-url\"\n        name=\"url\"\n        placeholder=\"Ссылка на картинку с аватаром\"\n        required\n        />\n       <span className=\"form__input-error avatar-input-error\"></span>\n      </label>\n  </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup({isOpen, onClose, onAddPlace}) {\n\n  const [newCardName, setNewCardName] = React.useState('');\n  const [newCardUrl, setNewCardUrl] = React.useState('');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onAddPlace({newCardName, newCardUrl});\n  }\n\n  function handleCardNameAdd(e) {\n    setNewCardName(e.target.value);\n  }\n\n  function handleCardUrlAdd(e) {\n    setNewCardUrl(e.target.value);\n  }\n\n  return(\n    <PopupWithForm\n      name=\"card-add\"\n      title=\"Новое место\"\n      buttonText=\"Создать\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}>\n      <label className=\"form__field\">\n        <input\n          type=\"text\"\n          value={newCardName}\n          onChange={handleCardNameAdd}\n          id=\"title-input\"\n          className=\"form__input\"\n          name=\"cardname\"\n          placeholder=\"Название\"\n          minLength=\"1\"\n          maxLength=\"30\"\n          required\n        />\n      <span className=\"form__input-error title-input-error\"></span>\n      </label>\n      <label className=\"form__field\">\n        <input\n          type=\"url\"\n          value={newCardUrl}\n          onChange={handleCardUrlAdd}\n          id=\"url-input\"\n          className=\"form__input form__input-url\"\n          name=\"url\"\n          placeholder=\"Ссылка на картинку\"\n          required\n        />\n        <span className=\"form__input-error url-input-error\"></span>\n      </label>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer page__section\">\n    <p className=\"footer__content\">&copy; {new Date().getFullYear()} Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { apiSettings } from \"./utils\";\n\nclass Api {\n  constructor({cardsUrl, userUrl, headers}) {\n    this._cardsUrl = cardsUrl;\n    this._userUrl = userUrl;\n    this._headers = headers;\n    this._authorization = headers.authorization;\n  }\n\n  // Получение информации о пользователе с сервера\n  getUserInfo() {\n    return fetch(this._userUrl, {\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  // Загрузка новой информации о пользователе на сервер\n  setUserInfo({name, about}) {\n    return fetch(this._userUrl, {\n    method: 'PATCH',\n    headers: this._headers,\n    body: JSON.stringify({\n      name: name,\n      about: about\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n  // Загрузка аватара пользователя на сервер\n  setUserAvatar(newAvatarUrl) {\n    return fetch(`${this._userUrl}/avatar`, {\n    method: 'PATCH',\n    headers: this._headers,\n    body: JSON.stringify({\n      avatar: newAvatarUrl,\n      })\n    })\n    .then(this._checkResponse)\n  }\n\n  // Получение массива карточек с сервера\n  getCardList() {\n    return fetch(this._cardsUrl, {\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  // Загрузка новой карточки на сервер\n  postNewCard({newCardName, newCardUrl}) {\n    return fetch(this._cardsUrl, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: newCardName,\n        link: newCardUrl\n        })\n    })\n    .then(this._checkResponse)\n  }\n\n  // Лайк и удаление лайка карточки\n  changeLikeCardStatus({isLiked, cardId}) {\n    return fetch(`${this._cardsUrl}/likes/${cardId}`, {\n      method: `${isLiked ? 'DELETE' : 'PUT'}`,\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  // Удаление карточки на сервере\n  deleteCard(cardId) {\n    return fetch(`${this._cardsUrl}/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(this._checkResponse)\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n}\n\n\n// Создаем экземпляр класса взаимодействия с API сервера\nconst api = new Api(apiSettings);\n\n\nexport default api;\n","const apiSettings = {\n  cardsUrl: 'https://mesto.nomoreparties.co/v1/cohort-22/cards',\n  userUrl: 'https://mesto.nomoreparties.co/v1/cohort-22/users/me',\n  headers: {\n    authorization: '515ca80d-3822-4c04-8086-34127dceee10',\n    'Content-Type': 'application/json'\n  }\n};\n\nexport {apiSettings};\n","import React from 'react';\n\nfunction ImagePopup({card, onClose}) {\n  return (\n    <section className={`popup popup_type_zoom ${card.link ? \"popup_opened\" : \"\"}`} aria-label=\"Просмотр фотографий\">\n      <figure className=\"zoom\">\n        <button type=\"button\" className=\"popup__close-button\" aria-label=\"Закрыть попап\" onClick={onClose}></button>\n        <img src={card.link} alt={card.name} className=\"zoom__image\"/>\n        <figcaption className=\"zoom__caption\">{card.name}</figcaption>\n      </figure>\n    </section>\n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Header from './Header';\nimport Main from './Main';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Footer from './Footer';\nimport api from '../utils/api'\nimport '../index.css';\nimport ImagePopup from './ImagePopup';\n\n\nfunction App() {\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  function handleEditAvatarClick(){\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick(){\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick(){\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card){\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  // Загружаем данные пользователя с сервера\n  React.useEffect(() => {\n    api.getUserInfo()\n    .then((res) => {\n      setCurrentUser(res);\n      })\n    .catch((err) => {\n       console.log(err);\n      });\n\n  }, []);\n\n  // Загружаем карточки с сервера\n  React.useEffect(() => {\n    api.getCardList()\n    .then((res) => {\n      setCards(res);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n\n  }, []);\n\n\n  function handleUpdateUser({name, about}) {\n    api.setUserInfo({name, about})\n    .then((res) => {\n      setCurrentUser(res);\n      closeAllPopups();\n      })\n    .catch((err) => {\n       console.log(err);\n      })\n  }\n\n  function handleUpdateAvatar(newAvatarUrl) {\n    api.setUserAvatar(newAvatarUrl)\n    .then((res) => {\n      setCurrentUser(res);\n      closeAllPopups();\n      })\n    .catch((err) => {\n       console.log(err);\n      })\n  }\n\n  function handleAddPlaceSubmit({newCardName, newCardUrl}) {\n    api.postNewCard({newCardName, newCardUrl})\n    .then((newCard) => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n      })\n    .catch((err) => {\n       console.log(err);\n      })\n  }\n\n  // Обработка лайков\n  function handleCardLike(card) {\n\t  // Проверяем, есть ли уже лайк на этой карточке\n\t  const isLiked = card.likes.some(i => i._id === currentUser._id);\n\t  // Отправляем запрос в API и получаем обновлённые данные карточки\n\t  api.changeLikeCardStatus({isLiked, cardId: card._id})\n    .then((newCard) => {\n\t\t  // Формируем новый массив на основе имеющегося, подставляя в него новую карточку и обновляем стейт\n\t    setCards((cards) => cards.map((i) => i._id === card._id ? newCard : i));\n\t  })\n    .catch((err) => {\n      console.log(err);\n     })\n  }\n\n  // Удаление карточки\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n    .then(() => {\n      setCards(cards.filter((i) => i._id !== card._id));\n    })\n    .catch((err) => {\n      console.log(err);\n     })\n  }\n\n\n  // Реализуем закрытие popup кнопкой Esc\n  React.useEffect(() => {\n\n    function handleEscClose(evt) {\n      if (evt.key ==='Escape') {\n        closeAllPopups();\n      }\n    }\n    // Список действий внутри одного хука\n    document.addEventListener('keyup', handleEscClose);\n\n    // Возвращаем функцию, которая удаляет эффекты\n    return () => {\n      document.removeEventListener('keyup', handleEscClose);\n    }\n\n  },[]);\n\n  return (\n    <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header />\n\n        <Main\n          onEditAvatar = {handleEditAvatarClick}\n          onEditProfile = {handleEditProfileClick}\n          onAddPlace = {handleAddPlaceClick}\n          onCardClick = {handleCardClick}\n          onCardLike = {handleCardLike}\n          onCardDelete = {handleCardDelete}\n          cards = {cards}/>\n\n        <Footer />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}/>\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}/>\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}/>\n\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}/>\n\n      </CurrentUserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}